name: build

on:
  pull_request:
  push:
    branches:
      - master

env:
  RUSTFLAGS: -Dwarnings
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  draft-release:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.release_drafter.outputs.tag_name }}
    steps:
      - uses: release-drafter/release-drafter@v5
        id: release_drafter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  static-analysis:
    name: Static analysis
    strategy:
      matrix:
        rust: [stable, nightly]
        runs-on:
          - ubuntu-20.04
          - ubuntu-22.04
          - macos-11
          - macos-12
          - windows-2019
          - windows-2022
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Update toolchain
        run: rustup update --no-self-update ${{ matrix.rust }} && rustup default ${{ matrix.rust }} && rustup component add clippy
      - name: Run cargo static analysis checks
        run: |
          cargo check
          cargo clippy --all-targets --all-features -- -D clippy::all
          cargo test

  build-android:
    needs: static-analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        rust: [stable, nightly]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            apple/target/
            android/target/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup toolchain
        run: |
          rustup update --no-self-update ${{ matrix.rust }} \
          && rustup default ${{ matrix.rust }} \
          && rustup component add clippy \
          && rustup target add x86_64-linux-android arm-linux-androideabi aarch64-linux-android armv7-linux-androideabi i686-linux-android

      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Assemble Release
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assembleRelease
          build-root-directory: android
      - name: Move artifact
        run: |
          mv ./android/lib/build/outputs/aar/lib-release.aar ./connlib-${{ needs.draft-release.outputs.tag_name }}
      - uses: actions/upload-artifact@v3
        with:
          name: connlib-android
          path: |
            ./connlib-${{ needs.draft-release.outputs.tag_name }}

  build-apple:
    needs: static-analysis
    runs-on: macos-latest
    permissions:
      contents: read
    strategy:
      matrix:
        rust: [stable, nightly]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            apple/target/
            android/target/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup toolchain
        run: |
          rustup update --no-self-update ${{ matrix.rust }} \
          && rustup default ${{ matrix.rust }} \
          && rustup component add clippy \
          && rustup target add aarch64-apple-ios aarch64-apple-darwin x86_64-apple-ios x86_64-apple-darwin

      - name: Build Connlib.xcframework
        run: |
          cd apple
          xcodebuild -list
          ./build-xcframework.sh
          touch Package.swift
          swift package compute-checksum Connlib.xcframework > Connlib.xcframework.checksum.txt
          mv Connlib.xcframework Connlib.xcframework.checksum.txt ../
      - uses: actions/upload-artifact@v3
        with:
          name: connlib-apple
          path: |
            ./Connlib.xcframework
            ./Connlib.xcframework.checksum.txt

  # Publish packages to the drafted release on merges to master so we can
  # manually test them if needed. Then we can just publish the drafted release
  # and we're good to go.
  publish-draft:
    if: startsWith(github.ref, 'refs/heads/master')
    runs-on: ubuntu-latest
    needs:
      - build-android
      - build-apple
      - draft-release
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: ./
      # Does XCFramework support this?
      # - name: Rename artifact file to tag
      #   run: |
      #     mv ./firezone*.rpm firezone_${{ needs.draft-release.outputs.tag_name }}-${{ matrix.platform }}.rpm || true
      #     mv ./firezone*.deb firezone_${{ needs.draft-release.outputs.tag_name }}-${{ matrix.platform }}.deb || true
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.draft-release.outputs.tag_name }}
          draft: true
          files: |
            Connlib.xcframework
            Connlib.xcframework.checksum.txt
            connlib-${{ needs.draft-release.outputs.tag_name }}.aar
